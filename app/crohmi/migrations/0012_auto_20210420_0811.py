# Generated by Django 2.2.19 on 2021-04-20 08:11

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('crohmi', '0011_auto_20210325_2153'),
    ]

    operations = [
        migrations.AddField(
            model_name='ndvimap',
            name='year',
            field=models.IntegerField(default=2019, validators=[django.core.validators.MinValueValidator(2018)]),
        ),
        migrations.AlterField(
            model_name='ndvimap',
            name='month',
            field=models.PositiveSmallIntegerField(blank=True, default=1, validators=[django.core.validators.MaxValueValidator(12), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='air_moisture',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(101), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='air_temperature',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(101), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='c2h5oh',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(5000), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='c3h8',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(5000), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='c4h10',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(5000), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='ch4',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(5000), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='co',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(5000), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='h2',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(5000), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='nh3',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(2000), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='no2',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(5000), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='node_id',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='soil_moisture',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(101), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='soil_temperature',
            field=models.FloatField(validators=[django.core.validators.MaxValueValidator(101), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='reading',
            name='timestamp',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
    ]
